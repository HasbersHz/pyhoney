# real working multiboot kernel #

format multiboot

# videobuffer #
video: char[] = 0xb8000 as char[]

vga_cursor: int = 0


fn print(text: str) -> char {
	return 'A'
}

fn test_loops() {
	for i: u8 = 0 i < 23 i++ {
		video[i] = 'A' + i
	}
}


# main function #
fn main(argc: int, argv: str[]) -> int {
	video[0] = print("ratata") # proof of work #
	# test forever loop #
	for {}
	leave # bootloader hangs automatically after kernel return #
}
